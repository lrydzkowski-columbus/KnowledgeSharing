CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
        IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'store') THEN
            CREATE SCHEMA store;
        END IF;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
        IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'user') THEN
            CREATE SCHEMA "user";
        END IF;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE store.category (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name character varying(200) NOT NULL,
        description character varying(2000) NULL,
        parent_category_id integer NULL,
        CONSTRAINT "PK_category" PRIMARY KEY (id),
        CONSTRAINT "FK_category_category_parent_category_id" FOREIGN KEY (parent_category_id) REFERENCES store.category (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE store.product (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name character varying(200) NOT NULL,
        description character varying(2000) NULL,
        price numeric NOT NULL,
        CONSTRAINT "PK_product" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE "user".role (
        id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 3),
        name character varying(200) NOT NULL,
        CONSTRAINT "PK_role" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE "user"."user" (
        id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 2),
        login character varying(200) NOT NULL,
        first_name character varying(200) NOT NULL,
        last_name character varying(200) NOT NULL,
        CONSTRAINT "PK_user" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE store.category_product (
        category_id integer NOT NULL,
        product_id integer NOT NULL,
        CONSTRAINT "PK_category_product" PRIMARY KEY (category_id, product_id),
        CONSTRAINT "FK_category_product_category_category_id" FOREIGN KEY (category_id) REFERENCES store.category (id) ON DELETE CASCADE,
        CONSTRAINT "FK_category_product_product_product_id" FOREIGN KEY (product_id) REFERENCES store.product (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE store."order" (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        user_id integer NULL,
        created_at timestamp with time zone NOT NULL,
        CONSTRAINT "PK_order" PRIMARY KEY (id),
        CONSTRAINT "FK_order_user_user_id" FOREIGN KEY (user_id) REFERENCES "user"."user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE "user".user_role (
        role_id integer NOT NULL,
        user_id integer NOT NULL,
        CONSTRAINT "PK_user_role" PRIMARY KEY (role_id, user_id),
        CONSTRAINT "FK_user_role_role_role_id" FOREIGN KEY (role_id) REFERENCES "user".role (id) ON DELETE CASCADE,
        CONSTRAINT "FK_user_role_user_user_id" FOREIGN KEY (user_id) REFERENCES "user"."user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE TABLE store.order_position (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        product_name character varying(200) NOT NULL,
        product_description character varying(2000) NULL,
        product_price numeric NOT NULL,
        amount integer NOT NULL,
        order_id integer NOT NULL,
        CONSTRAINT "PK_order_position" PRIMARY KEY (id),
        CONSTRAINT "FK_order_position_order_order_id" FOREIGN KEY (order_id) REFERENCES store."order" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    INSERT INTO "user".role (id, name)
    VALUES (1, 'admin');
    INSERT INTO "user".role (id, name)
    VALUES (2, 'user');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    INSERT INTO "user"."user" (id, first_name, last_name, login)
    VALUES (1, 'Łukasz', 'Rydzkowski', 'lrydzkowski');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    INSERT INTO "user".user_role (role_id, user_id)
    VALUES (1, 1);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE INDEX "IX_category_parent_category_id" ON store.category (parent_category_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE INDEX "IX_category_product_product_id" ON store.category_product (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE INDEX "IX_order_user_id" ON store."order" (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE INDEX "IX_order_position_order_id" ON store.order_position (order_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    CREATE INDEX "IX_user_role_user_id" ON "user".user_role (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    PERFORM setval(
        pg_get_serial_sequence('"user".role', 'id'),
        GREATEST(
            (SELECT MAX(id) FROM "user".role) + 1,
            nextval(pg_get_serial_sequence('"user".role', 'id'))),
        false);
    PERFORM setval(
        pg_get_serial_sequence('"user"."user"', 'id'),
        GREATEST(
            (SELECT MAX(id) FROM "user"."user") + 1,
            nextval(pg_get_serial_sequence('"user"."user"', 'id'))),
        false);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220510072244_init_db') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220510072244_init_db', '6.0.4');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220511070558_add-test-table') THEN
    CREATE TABLE store.test (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name character varying(200) NOT NULL,
        CONSTRAINT "PK_test" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220511070558_add-test-table') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220511070558_add-test-table', '6.0.4');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220511074325_remove-test-table') THEN
    DROP TABLE store.test;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220511074325_remove-test-table') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220511074325_remove-test-table', '6.0.4');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220512104711_add-product-comment-table') THEN
    CREATE TABLE store.product_comment (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        comment character varying(4000) NOT NULL,
        product_id integer NULL,
        CONSTRAINT "PK_product_comment" PRIMARY KEY (id),
        CONSTRAINT "FK_product_comment_product_product_id" FOREIGN KEY (product_id) REFERENCES store.product (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220512104711_add-product-comment-table') THEN
    CREATE INDEX "IX_product_comment_product_id" ON store.product_comment (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220512104711_add-product-comment-table') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220512104711_add-product-comment-table', '6.0.4');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220512110859_add-column-to-user-table') THEN
    ALTER TABLE "user"."user" ADD email character varying(200) NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220512110859_add-column-to-user-table') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220512110859_add-column-to-user-table', '6.0.4');
    END IF;
END $EF$;
COMMIT;

